@import './libraries/SketchConfig.cocoascript'

// Default key for NSUserDefaults.
var selectedArtboardkey = "SketchNavigatordefaultSelectedArtboardIndex"

// Callback for navigate action.
var SketchNavigatorNavigate = function(context) {
  var document = context.document

  // Show an error message if document has no artboards.
  if (!document.hasArtboards()) {
    [document showMessage:"No artboards found."]
    return
  }

  // Build a tree of pages and artboards from the document.
  var tree = SketchNavigator.getTreeFromDocument(document)

  // Get combox values as "page: artboard".
  var comboxBoxValues = SketchNavigator.buildComboxBoxValuesFromTree(tree)

  // Get the default index.
  var defaultSelectedArtboardIndex = SketchConfig.get(selectedArtboardkey)
  if (defaultSelectedArtboardIndex === nil || defaultSelectedArtboardIndex > comboxBoxValues.length - 1) {
    defaultSelectedArtboardIndex = 0
  }

  // Show the selector and get selected artboard.
  var selectedComboxBoxValue = SketchNavigator.showArtboardSelector("Navigate", "Select an artboard", comboxBoxValues, defaultSelectedArtboardIndex)
  if (selectedComboxBoxValue !== null) {
    var selectedIndex = selectedComboxBoxValue.indexOfSelectedItem()

    if (selectedIndex >= 0) {
      // Set the default index.
      defaultSelectedArtboardIndex = selectedComboxBoxValue.indexOfSelectedItem()

      // Save to defaults.
      SketchConfig.set(selectedArtboardkey, defaultSelectedArtboardIndex);

      // Navigate to target.
      var flattenedTree = SketchNavigator.flattenTree(tree)
      var targetValue = selectedComboxBoxValue.objectValueOfSelectedItem()
      var target = flattenedTree[targetValue]
      SketchNavigator.navigateToArtboardOnPageInDocument(target["artboard"], target["page"], document)
    }
  }
};

// Sketch Navigator.
var SketchNavigator = {

  // Builds a tree of pages and artboards from the document.
  getTreeFromDocument: function(document) {
    var tree = {}

    var pages = document.pages()
    for (var i = 0; i < pages.count(); i++) {
      var currentPage = pages.objectAtIndex(i)
      tree[currentPage.name()] = {
        page: currentPage,
        artboards: currentPage.artboards()
      }
    }

    return tree
  },

  // Helper to flatten a tree using page: artboard as index.
  flattenTree: function(tree) {
    var flattenedTree = {}
    for (var name in tree) {
      // Get the page.
      var page = tree[name]["page"]

      // Add artboards.
      var artboards = tree[name]["artboards"]
      var loop = artboards.objectEnumerator()
      while (artboard = loop.nextObject()) {
        flattenedTree[name + ": " + artboard.name()] = {
          page: page,
          artboard: artboard
        }
      }
    }

    return flattenedTree
  },

  // Navigates to an artboard.
  navigateToArtboardOnPageInDocument: function(artboard, page, document) {
    // Create a rect from artboard dimensions to zoom to.
    var padding = 0.050
    var rect = artboard.rect()
    rect.origin.x -= rect.size.width * padding
    rect.origin.y -= rect.size.height * padding
    rect.size.width *= 1 + padding * 2
    rect.size.height *= 1 + padding * 2

    var view = document.currentView()
    document.setCurrentPage(page)
    view.zoomToFitRect(rect)
  },

  // Builds a comboxBox friendly array from tree.
  buildComboxBoxValuesFromTree: function(tree) {
    var values = []
    for (var name in tree) {
      // Add artboards.
      var artboards = tree[name]["artboards"]
      var loop = artboards.reverseObjectEnumerator()
      while (artboard = loop.nextObject()) {
        values.push(name + ": " + artboard.name())
      }
    }

    return values
  },

  // Helper to display an alert window with a comboxbos.
  showArtboardSelector: function(title, description, comboxBoxItems, selectedComboxBoxIndex) {
    var alert = COSAlertWindow.new()
    alert.setIcon(nil)
    alert.addButtonWithTitle('Go')
    alert.addButtonWithTitle('Cancel')

    alert.setMessageText(title)
    alert.setInformativeText(description)

    var comboxBoxView = [[NSComboBox alloc] initWithFrame:NSMakeRect(0, 0, 300, 28)]
    comboxBoxView.completes = true
    [comboxBoxView addItemsWithObjectValues:comboxBoxItems]
    [comboxBoxView selectItemAtIndex:selectedComboxBoxIndex]
    alert.addAccessoryView(comboxBoxView)

    var userInput = alert.runModal()
    if(userInput == "1000") {
      return alert.viewAtIndex(0)
    }

    return nil
  }
}
